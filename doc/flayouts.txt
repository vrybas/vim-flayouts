flayouts.txt  Layouts for Fugitive

Author:  Vladimir Rybas <http://vrybas.github.io/>
License: Same terms as Vim itself (see |license|)

INTRODUCTION                                    *flayouts*

Flayouts.vim aims to ease work with [Fugitive](github.com/tpope/vim-fugitive)
by providing window layouts for certain operations, such as:

  * Commit
  * Pull Request review
  * Conflict Resolution

COMMANDS                                        *flayouts-commands*


:GlstatusTab                                             *flayouts-:GlstatusTab*
                      Open new tab with three-window layout. Top window
                      contains `:Gstatus`, bottom window contains current
                      file, right window contains output of git-diff.

:Glcommit                                                   *flayouts-:Glcommit*
                      Perform a commit from `:Glstatus` window, and close tab.

:Glabort                                                     *flayouts-:Glabort*
                      Cancel a commit from `:Glstatus` window, and close tab.

:Glc                                                             *flayouts-:Glc*
                      If executed from :Glstatus window, runs :Glcommit.
                      Otherwise, runs :Glstatus. So a single key mapping can
                      show status, and perform a commit.

:GlpullRequestSummaryTab [{branch}]          *flayouts-:GlpullRequestSummaryTab*
:GlpullRequestSummary [{branch}]
                      Open new tab with two-window layout. Left window contains
                      current file, right window contains git-request-pull
                      output (summary of all commits between base branch and
                      current branch). Base branch can be specified as a
                      parameter, or with global configuration variable
                      `g:flayouts_base_branch`

:GlpullRequestCommitsTab [{branch}]          *flayouts-:GlpullRequestCommitsTab*
:GlpullRequestCommits [{branch}]
                      Open new tab with two-window layout. Left window contains
                      current file, right window contains log of all commits
                      between base branch and current branch. Base branch can be
                      specified as a parameter, or with global configuration
                      variable `g:flayouts_base_branch`

:GllogPatchTab [{number}]                              *flayouts-:GllogPatchTab*
:GllogPatch [{number}]
                      Open new tab with two-window layout. Left window contains
                      current file, right window contains log of {number}
                      commits of current file. Default is 100 commits.

:GlresolveConflictTab                           *flayouts-:GlresolveConflictTab*
                      Open new tab with three-window layout. Top window
                      conains 'ours' version of current file. Middle window
                      contains current file with conflict maks. Bottom window
                      contains 'theirs' version of current file.

:Glwrite                                        *flayouts-:Glwrite*
                      Adds current file to index and closes tab (should be
                      used with `:GlresolveConflictTab`)


:GlopenFromDiff                                       *flayouts-:GlopenFromDiff*
                      Open file containing code chunk under cursor from any
                      generated 'diff' output in vertical split.


OPTIONS                                         *flayouts-options*

flayouts_base_branch                            *g:flayouts_base_branch*
<
let g:flayouts_base_branch = "origin/master"
<
Default: "origin/master"

Used for :GlpullRequest and :GlprDiff to run "requiest-pull" against specified
branch.

ABOUT                                           *flayouts-about*

Grab the latest version or report a bug on GitHub:

http://github.com/vrybas/vim-flayouts

 vim:tw=78:et:ft=help:norl:
